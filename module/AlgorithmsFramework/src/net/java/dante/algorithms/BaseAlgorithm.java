/*
 * Created on 2006-09-09
 *
 * @author M.Olszewski
 */

package net.java.dante.algorithms;


import net.java.dante.algorithms.data.AlgorithmData;
import net.java.dante.sim.command.CommandsRepository;

/**
 * Base class for all algorithms. It contains all the methods that must be
 * provided by implementations of this class.
 *
 * @author M.Olszewski
 */
public abstract class BaseAlgorithm
{
  /**
   * Creates instance of {@link BaseAlgorithm} class.
   */
  public BaseAlgorithm()
  {
    // Intentionally left empty.
  }


  /**
   * Runs algorithm.
   * Implementations of this method should check sometimes whether
   * algorithm should be still running by calling {@link #isRunning()} method.
   */
  protected abstract void runAlgorithm();

  /**
   * Checks whether algorithm should be running.
   *
   * @return Returns <code>true</code> if algorithm should be running,
   *         <code>false</code> otherwise.
   */
  protected abstract boolean isRunning();

  /**
   * Gets algorithm's data.
   *
   * @return Returns algorithm's data.
   */
  protected abstract AlgorithmData getAlgorithmData();

  /**
   * Sends the specified commands repository generated by this algorithm.
   *
   * @param commands - the specified commands repository.
   */
  protected abstract void sendCommands(CommandsRepository commands);

  /**
   * Request for algorithm to stop running.
   */
  public abstract void requestStopRunning();
}