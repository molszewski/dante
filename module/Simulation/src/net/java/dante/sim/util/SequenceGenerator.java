/*
 * Created on 2006-08-10
 *
 * @author M.Olszewski
 */

package net.java.dante.sim.util;

/**
 * Class responsible for generating identifiers in sequence
 * (integers in range 0..{@link Integer#MAX_VALUE}). If maximum value is
 * reached, identifiers are generated from minimum value.
 *
 * @author M.Olszewski
 */
public abstract class SequenceGenerator
{
  /**
   * Most recent value of identifier generated by this
   * {@link SequenceGeneratorImpl}.
   */
  private int recentId = -1;


  /**
   * Constructor of {@link SequenceGenerator} class.
   */
  SequenceGenerator()
  {
    // Intentionally left empty.
  }


  /**
   * Generates identifier (integer in range 0..{@link Integer#MAX_VALUE}).
   * If {@link Integer#MAX_VALUE} value is reached, next identifiers
   * will be generated from zero value.
   *
   * @return Returns generated identifier.
   */
  public abstract int generateId();

  /**
   * Default method generating identifiers.
   *
   * @return Returns generated identifier.
   */
  protected final int defaultGenerateId()
  {
    if (recentId < Integer.MAX_VALUE)
    {
      recentId++;
    }
    else
    {
      recentId = 0;
    }

    return recentId;
  }

  /**
   * Creates default, not synchronized instance of {@link SequenceGenerator}
   * class.
   *
   * @return Returns created instance of {@link SequenceGenerator} class.
   */
  public static SequenceGenerator sequenceGenerator()
  {
    return new SequenceGeneratorImpl();
  }

  /**
   * Creates synchronized instance of {@link SequenceGenerator} class.
   *
   * @return Returns created instance of {@link SequenceGenerator} class.
   */
  public static SequenceGenerator synchronizedSequenceGenerator()
  {
    return new SynchronizedSequenceGeneratorImpl();
  }


  /**
   * Default not synchronized implementation of {@link SequenceGenerator}.
   *
   * @author M.Olszewski
   */
  final static class SequenceGeneratorImpl extends SequenceGenerator
  {
    /**
     * @see net.java.dante.sim.util.SequenceGenerator#generateId()
     */
    public int generateId()
    {
      return defaultGenerateId();
    }
  }

  /**
   * Synchronized implementation of {@link SequenceGenerator}.
   *
   * @author M.Olszewski
   */
  final static class SynchronizedSequenceGeneratorImpl extends SequenceGenerator
  {
    /**
     * @see net.java.dante.sim.util.SequenceGenerator#generateId()
     */
    public synchronized int generateId()
    {
      return defaultGenerateId();
    }
  }
}